{"version":3,"sources":["ng://ngx-bootstrap/tabs/ng-transclude.directive.ts","ng://ngx-bootstrap/tabs/tabset.config.ts","ng://ngx-bootstrap/tabs/tabset.component.ts","ng://ngx-bootstrap/tabs/tab.directive.ts","ng://ngx-bootstrap/tabs/tab-heading.directive.ts","ng://ngx-bootstrap/tabs/tabs.module.ts"],"names":["NgTranscludeDirective","viewRef","this","Object","defineProperty","prototype","_ngTransclude","templateRef","createEmbeddedView","Directive","args","selector","ViewContainerRef","Input","TabsetConfig","type","Injectable","TabsetComponent","config","renderer","elementRef","clazz","tabs","classMap","assign","_vertical","value","setClassMap","_justified","_type","ngOnDestroy","isDestroyed","addTab","tab","push","active","length","removeTab","options","reselect","emit","index","indexOf","hasAvailableTabs","newActiveIndex","getClosestTabIndex","removed","splice","nativeElement","parentNode","removeChild","keyNavActions","event","list","Array","from","querySelectorAll","keyCode","key","preventDefault","click","removable","focus","lastTab","shift","i","classList","contains","firstTab","previousTab","nextTab","tabsLength","step","prevIndex","nextIndex","disabled","_a","nav-stacked","vertical","flex-column","nav-justified","justified","Component","template","Renderer2","ElementRef","HostBinding","TabDirective","tabset","selectTab","EventEmitter","deselect","addClass","_customClass","customClass","_this","split","forEach","cssClass","removeClass","trim","_active","ngOnInit","Output","TabHeadingDirective","headingRef","TemplateRef","TabsModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngTransclude]'\n})\nexport class NgTranscludeDirective {\n  viewRef: ViewContainerRef;\n\n  protected _viewRef: ViewContainerRef;\n  /* tslint:disable-next-line:no-any */\n  protected _ngTransclude: TemplateRef<any>;\n\n  @Input()\n  /* tslint:disable-next-line:no-any */\n  set ngTransclude(templateRef: TemplateRef<any>) {\n    this._ngTransclude = templateRef;\n    if (templateRef) {\n      this.viewRef.createEmbeddedView(templateRef);\n    }\n  }\n\n  /* tslint:disable-next-line:no-any */\n  get ngTransclude(): TemplateRef<any> {\n    return this._ngTransclude;\n  }\n\n  constructor(viewRef: ViewContainerRef) {\n    this.viewRef = viewRef;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TabsetConfig {\n  /** provides default navigation context class: 'tabs' or 'pills' */\n  type = 'tabs';\n}\n","import { Component, HostBinding, Input, OnDestroy, Renderer2, ElementRef } from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\nimport { TabsetConfig } from './tabset.config';\n// todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\n@Component({\n  selector: 'tabset',\n  templateUrl: './tabset.component.html',\n  styleUrls: ['./tabs.scss']\n})\nexport class TabsetComponent implements OnDestroy {\n  /** if true tabs will be placed vertically */\n  @Input()\n  get vertical(): boolean {\n    return this._vertical;\n  }\n  set vertical(value: boolean) {\n    this._vertical = value;\n    this.setClassMap();\n  }\n\n  /** if true tabs fill the container and have a consistent width */\n  @Input()\n  get justified(): boolean {\n    return this._justified;\n  }\n  set justified(value: boolean) {\n    this._justified = value;\n    this.setClassMap();\n  }\n\n  /** navigation context class: 'tabs' or 'pills' */\n  @Input()\n  get type(): string {\n    return this._type;\n  }\n  set type(value: string) {\n    this._type = value;\n    this.setClassMap();\n  }\n\n  @HostBinding('class.tab-container') clazz = true;\n\n  tabs: TabDirective[] = [];\n  classMap: { [key: string]: boolean } = {};\n\n  protected isDestroyed: boolean;\n  protected _vertical: boolean;\n  protected _justified: boolean;\n  protected _type: string;\n\n  constructor(\n    config: TabsetConfig,\n    private renderer: Renderer2,\n    private elementRef: ElementRef\n  ) {\n    Object.assign(this, config);\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed = true;\n  }\n\n  addTab(tab: TabDirective): void {\n    this.tabs.push(tab);\n    tab.active = this.tabs.length === 1 && typeof tab.active === 'undefined';\n  }\n\n  removeTab(\n    tab: TabDirective,\n    options = { reselect: true, emit: true }\n  ): void {\n    const index = this.tabs.indexOf(tab);\n    if (index === -1 || this.isDestroyed) {\n      return;\n    }\n    // Select a new tab if the tab to be removed is selected and not destroyed\n    if (options.reselect && tab.active && this.hasAvailableTabs(index)) {\n      const newActiveIndex = this.getClosestTabIndex(index);\n      this.tabs[newActiveIndex].active = true;\n    }\n    if (options.emit) {\n      tab.removed.emit(tab);\n    }\n    this.tabs.splice(index, 1);\n    if (tab.elementRef.nativeElement.parentNode) {\n      this.renderer.removeChild(\n        tab.elementRef.nativeElement.parentNode,\n        tab.elementRef.nativeElement\n      );\n    }\n  }\n\n  /* tslint:disable-next-line: cyclomatic-complexity */\n  keyNavActions(event: KeyboardEvent, index: number) {\n    const list: HTMLElement[] = Array.from(this.elementRef.nativeElement.querySelectorAll('.nav-link'));\n    // const activeElList = list.filter((el: HTMLElement) => !el.classList.contains('disabled'));\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n      event.preventDefault();\n      const currentTab = list[(index) % list.length];\n      currentTab.click();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 39 || event.key === 'RightArrow') {\n      let nextTab: any;\n      let shift = 1;\n\n      do {\n        nextTab = list[(index + shift) % list.length];\n\n        shift++;\n      } while (nextTab.classList.contains('disabled'));\n\n      nextTab.focus();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 37 || event.key === 'LeftArrow') {\n      let previousTab: any;\n      let shift = 1;\n      let i = index;\n\n      do {\n        if ((i - shift) < 0) {\n          i = list.length - 1;\n          previousTab = list[i];\n          shift = 0;\n        } else {\n          previousTab = list[i - shift];\n        }\n\n        shift++;\n      } while (previousTab.classList.contains('disabled'));\n\n      previousTab.focus();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 36 || event.key === 'Home') {\n      event.preventDefault();\n\n      let firstTab: any;\n      let shift = 0;\n\n      do {\n        firstTab = list[shift % list.length];\n\n        shift++;\n      } while (firstTab.classList.contains('disabled'));\n\n      firstTab.focus();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 35 || event.key === 'End') {\n      event.preventDefault();\n\n      let lastTab: any;\n      let shift = 1;\n      let i = index;\n\n      do {\n        if ((i - shift) < 0) {\n          i = list.length - 1;\n          lastTab = list[i];\n          shift = 0;\n        } else {\n          lastTab = list[i - shift];\n        }\n\n        shift++;\n      } while (lastTab.classList.contains('disabled'));\n\n      lastTab.focus();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 46 || event.key === 'Delete') {\n      if (this.tabs[index].removable) {\n        this.removeTab(this.tabs[index]);\n\n        if (list[index + 1]) {\n          list[(index + 1) % list.length].focus();\n\n          return;\n        }\n\n        if (list[list.length - 1]) {\n          list[0].focus();\n        }\n      }\n    }\n  }\n\n  protected getClosestTabIndex(index: number): number {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return -1;\n    }\n\n    for (let step = 1; step <= tabsLength; step += 1) {\n      const prevIndex = index - step;\n      const nextIndex = index + step;\n      if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n        return prevIndex;\n      }\n      if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n        return nextIndex;\n      }\n    }\n\n    return -1;\n  }\n\n  protected hasAvailableTabs(index: number): boolean {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return false;\n    }\n\n    for (let i = 0; i < tabsLength; i += 1) {\n      if (!this.tabs[i].disabled && i !== index) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  protected setClassMap(): void {\n    this.classMap = {\n      'nav-stacked': this.vertical,\n      'flex-column': this.vertical,\n      'nav-justified': this.justified,\n      [`nav-${this.type}`]: true\n    };\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  TemplateRef,\n  OnInit,\n  OnDestroy,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport { TabsetComponent } from './tabset.component';\n\n@Directive({ selector: 'tab, [tab]' })\nexport class TabDirective implements OnInit, OnDestroy {\n  /** tab header text */\n  @Input() heading: string;\n  /** tab id. The same id with suffix '-link' will be added to the corresponding &lt;li&gt; element  */\n  @HostBinding('attr.id')\n  @Input() id: string;\n  /** if true tab can not be activated */\n  @Input() disabled: boolean;\n  /** if true tab can be removable, additional button will appear */\n  @Input() removable: boolean;\n  /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\n  @Input()\n  get customClass(): string {\n    return this._customClass;\n  }\n\n  set customClass(customClass: string) {\n    if (this.customClass) {\n      this.customClass.split(' ').forEach((cssClass: string) => {\n        this.renderer.removeClass(this.elementRef.nativeElement, cssClass);\n      });\n    }\n\n    this._customClass = customClass ? customClass.trim() : null;\n\n    if (this.customClass) {\n      this.customClass.split(' ').forEach((cssClass: string) => {\n        this.renderer.addClass(this.elementRef.nativeElement, cssClass);\n      });\n    }\n  }\n\n  /** tab active state toggle */\n  @HostBinding('class.active')\n  @Input()\n  get active(): boolean {\n    return this._active;\n  }\n\n  set active(active: boolean) {\n    if (this._active === active) {\n      return;\n    }\n    if ((this.disabled && active) || !active) {\n      if (this._active && !active) {\n        this.deselect.emit(this);\n        this._active = active;\n      }\n\n      return;\n    }\n\n    this._active = active;\n    this.selectTab.emit(this);\n    this.tabset.tabs.forEach((tab: TabDirective) => {\n      if (tab !== this) {\n        tab.active = false;\n      }\n    });\n  }\n\n  /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n  @Output() selectTab: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n  @Output() deselect: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\n  @Output() removed: EventEmitter<TabDirective> = new EventEmitter();\n\n  @HostBinding('class.tab-pane') addClass = true;\n\n  /* tslint:disable-next-line:no-any */\n  headingRef: TemplateRef<any>;\n  tabset: TabsetComponent;\n  protected _active: boolean;\n  protected _customClass: string;\n\n  constructor(\n    tabset: TabsetComponent,\n    public elementRef: ElementRef,\n    public renderer: Renderer2\n  ) {\n    this.tabset = tabset;\n    this.tabset.addTab(this);\n  }\n\n  ngOnInit(): void {\n    this.removable = this.removable;\n  }\n\n  ngOnDestroy(): void {\n    this.tabset.removeTab(this, { reselect: false, emit: false });\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\n\n/** Should be used to mark <ng-template> element as a template for tab heading */\n@Directive({ selector: '[tabHeading]' })\nexport class TabHeadingDirective {\n  /* tslint:disable-next-line:no-any */\n  templateRef: TemplateRef<any>;\n\n  /* tslint:disable-next-line:no-any */\n  constructor(templateRef: TemplateRef<any>, tab: TabDirective) {\n    tab.headingRef = templateRef;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { NgTranscludeDirective } from './ng-transclude.directive';\nimport { TabHeadingDirective } from './tab-heading.directive';\nimport { TabDirective } from './tab.directive';\nimport { TabsetComponent } from './tabset.component';\nimport { TabsetConfig } from './tabset.config';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    NgTranscludeDirective,\n    TabDirective,\n    TabsetComponent,\n    TabHeadingDirective\n  ],\n  exports: [\n    TabDirective,\n    TabsetComponent,\n    TabHeadingDirective,\n    NgTranscludeDirective\n  ]\n})\nexport class TabsModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TabsModule,\n      providers: [TabsetConfig]\n    };\n  }\n}\n"]}