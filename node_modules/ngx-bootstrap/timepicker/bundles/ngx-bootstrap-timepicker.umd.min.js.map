{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-bootstrap/timepicker/reducer/timepicker.actions.ts","ng://ngx-bootstrap/timepicker/timepicker.utils.ts","ng://ngx-bootstrap/timepicker/timepicker-controls.util.ts","ng://ngx-bootstrap/timepicker/timepicker.config.ts","ng://ngx-bootstrap/timepicker/reducer/timepicker.reducer.ts","ng://ngx-bootstrap/timepicker/reducer/timepicker.store.ts","ng://ngx-bootstrap/timepicker/timepicker.component.ts","ng://ngx-bootstrap/timepicker/timepicker.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","TimepickerActions","prototype","writeValue","value","type","WRITE_VALUE","payload","changeHours","event","CHANGE_HOURS","changeMinutes","CHANGE_MINUTES","changeSeconds","CHANGE_SECONDS","setTime","SET_TIME_UNIT","updateControls","UPDATE_CONTROLS","Injectable","dex","hoursPerDay","hoursPerDayHalf","minutesPerHour","secondsPerMinute","isValidDate","Date","isNaN","getHours","isValidLimit","controls","newDate","min","max","toNumber","parseInt","parseHours","isPM","hour","NaN","parseMinutes","minute","parseSeconds","seconds","parseTime","changeTime","diff","createDate","minutes","getMinutes","getSeconds","opts","hours","getFullYear","getMonth","getDate","getMilliseconds","padNumber","_value","toString","length","isHourInputValid","isMinuteInputValid","isSecondInputValid","isInputValid","canChangeValue","state","readonlyInput","disabled","source","mousewheel","arrowkeys","getControlsValue","hourStep","minuteStep","secondsStep","showSpinners","showMeridian","showSeconds","meridians","TimepickerConfig","this","showMinutes","initialState","config","canIncrementHours","canIncrementMinutes","canIncrementSeconds","canDecrementHours","canDecrementMinutes","canDecrementSeconds","canToggleMeridian","timepickerReducer","action","assign","step","_newTime","canChangeMinutes","canChangeSeconds","_newControlsState","res","_newHour","_newMinutes","_newSeconds","timepickerControls","_newState","TimepickerStore","_dispatcher","BehaviorSubject","MiniState","_super","call","__","constructor","create","tslib_1.__extends","MiniStore","TIMEPICKER_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","TimepickerComponent","multi","_config","_cd","_store","_timepickerActions","_this","isValid","EventEmitter","invalidHours","invalidMinutes","invalidSeconds","onChange","Function","onTouched","timepickerSub","select","subscribe","_renderTime","dispatch","controlsState","emit","markForCheck","defineProperty","resetValidation","meridian","prevDef","$event","preventDefault","wheelSign","Math","sign","deltaY","ngOnChanges","changes","updateHours","_updateTime","updateMinutes","updateSeconds","_seconds","_minutes","toggleMeridian","isEditable","obj","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ngOnDestroy","unsubscribe","_hours","getUTCSeconds","Component","args","selector","changeDetection","ChangeDetectionStrategy","OnPush","providers","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","Input","Output","TimepickerModule","forRoot","ngModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"ijBAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,ICpB5B,IAAAO,EAAA,WAQA,SAAAA,KAkDA,OAzCEA,EAAAC,UAAAC,WAAA,SAAWC,GACT,MAAO,CACLC,KAAMJ,EAAkBK,YACxBC,QAASH,IAIbH,EAAAC,UAAAM,YAAA,SAAYC,GACV,MAAO,CACLJ,KAAMJ,EAAkBS,aACxBH,QAASE,IAIbR,EAAAC,UAAAS,cAAA,SAAcF,GACZ,MAAO,CACLJ,KAAMJ,EAAkBW,eACxBL,QAASE,IAIbR,EAAAC,UAAAW,cAAA,SAAcJ,GACZ,MAAO,CACLJ,KAAMJ,EAAkBa,eACxBP,QAASE,IAIbR,EAAAC,UAAAa,QAAA,SAAQX,GACN,MAAO,CACLC,KAAMJ,EAAkBe,cACxBT,QAASH,IAIbH,EAAAC,UAAAe,eAAA,SAAeb,GACb,MAAO,CACLC,KAAMJ,EAAkBiB,gBACxBX,QAASH,IA7CGH,EAAAK,YAAc,yCACdL,EAAAS,aAAe,4BACfT,EAAAW,eAAiB,8BACjBX,EAAAa,eAAiB,8BACjBb,EAAAe,cAAgB,6BAChBf,EAAAiB,gBAAkB,mDAPnCC,EAAAA,aAkDDlB,EA1DA,GCEMmB,EAAM,GACNC,EAAc,GACdC,EAAkB,GAClBC,EAAiB,GACjBC,EAAmB,GAEzB,SAAgBC,EAAYrB,GAC1B,QAAKA,MAIDA,aAAiBsB,MAAQC,MAAMvB,EAAMwB,eAIpB,iBAAVxB,GACFqB,EAAY,IAAIC,KAAKtB,MAMhC,SAAgByB,EAAaC,EAAoCC,GAC/D,QAAID,EAASE,KAAOD,EAAUD,EAASE,QAInCF,EAASG,KAAOF,EAAUD,EAASG,KAOzC,SAAgBC,EAAS9B,GACvB,MAAqB,iBAAVA,EACFA,EAGF+B,SAAS/B,EAAOgB,GAOzB,SAAgBgB,EACdhC,EACAiC,QAAA,IAAAA,IAAAA,GAAA,OAEMC,EAAOJ,EAAS9B,GACtB,OACEuB,MAAMW,IACNA,EAAO,GACPA,GAAQD,EAAOf,EAAkBD,GAE1BkB,IAGFD,EAGT,SAAgBE,EAAapC,OACrBqC,EAASP,EAAS9B,GACxB,OAAIuB,MAAMc,IAAWA,EAAS,GAAKA,EAASlB,EACnCgB,IAGFE,EAGT,SAAgBC,EAAatC,OACrBuC,EAAUT,EAAS9B,GACzB,OAAIuB,MAAMgB,IAAYA,EAAU,GAAKA,EAAUnB,EACtCe,IAGFI,EAGT,SAAgBC,EAAUxC,GACxB,MAAqB,iBAAVA,EACF,IAAIsB,KAAKtB,GAGXA,EAGT,SAAgByC,EAAWzC,EAAa0C,GACtC,IAAK1C,EACH,OAAOyC,EAAWE,EAAW,IAAIrB,KAAQ,EAAG,EAAG,GAAIoB,OAGjDR,EAAOlC,EAAMwB,WACboB,EAAU5C,EAAM6C,aAChBN,EAAUvC,EAAM8C,aAiBpB,OAfIJ,EAAKR,OACPA,GAAQA,EAAOJ,EAASY,EAAKR,OAASjB,GAC3B,IACTiB,GAAQjB,GAIRyB,EAAKL,SACPO,GAAoBd,EAASY,EAAKL,SAGhCK,EAAKH,UACPA,GAAoBT,EAASY,EAAKH,UAG7BI,EAAW3C,EAAOkC,EAAMU,EAASL,GAG1C,SAAgB5B,EAAQX,EAAa+C,OAC/Bb,EAAOF,EAAWe,EAAKb,MACrBG,EAASD,EAAaW,EAAKV,QAC3BE,EAAUD,EAAaS,EAAKR,UAAY,EAM9C,OAJIQ,EAAKd,MAAiB,KAATC,IACfA,GAAQhB,GAGLlB,EAQDuB,MAAMW,IAASX,MAAMc,GAChBrC,EAGF2C,EAAW3C,EAAOkC,EAAMG,EAAQE,GAXhChB,MAAMW,IAAUX,MAAMc,GAIpBrC,EAHE2C,EAAW,IAAIrB,KAAQY,EAAMG,EAAQE,GAalD,SAAgBI,EACd3C,EACAgD,EACAJ,EACAL,GAEA,OAAO,IAAIjB,KACTtB,EAAMiD,cACNjD,EAAMkD,WACNlD,EAAMmD,UACNH,EACAJ,EACAL,EACAvC,EAAMoD,mBAIV,SAAgBC,EAAUrD,OAClBsD,EAAStD,EAAMuD,WACrB,OAAID,EAAOE,OAAS,EACXF,EAGF,IAAIA,EAGb,SAAgBG,EAAiBT,EAAef,GAC9C,OAAQV,MAAMS,EAAWgB,EAAOf,IAGlC,SAAgByB,EAAmBd,GACjC,OAAQrB,MAAMa,EAAaQ,IAG7B,SAAgBe,EAAmBpB,GACjC,OAAQhB,MAAMe,EAAaC,IAiB7B,SAAgBqB,EACdZ,EACAJ,EACAL,EACAN,GAEA,YAJA,IAAAW,IAAAA,EAAA,UACA,IAAAL,IAAAA,EAAA,KAGOkB,EAAiBT,EAAOf,IAC1ByB,EAAmBd,IACnBe,EAAmBpB,GClM1B,SAAgBsB,EACdC,EACAzD,GAEA,GAAIyD,EAAMC,eAAiBD,EAAME,SAC/B,OAAO,EAGT,GAAI3D,EAAO,CACT,GAAqB,UAAjBA,EAAM4D,SAAuBH,EAAMI,WACrC,OAAO,EAGT,GAAqB,QAAjB7D,EAAM4D,SAAqBH,EAAMK,UACnC,OAAO,EAIX,OAAO,EAwDT,SAAgBC,EACdN,GAkBA,MAAO,CACLO,SAhBAP,EAAAO,SAiBAC,WAhBAR,EAAAQ,WAiBAC,YAhBAT,EAAAS,YAiBAR,cAhBAD,EAAAC,cAiBAC,SAhBAF,EAAAE,SAiBAE,WAhBAJ,EAAAI,WAiBAC,UAhBAL,EAAAK,UAiBAK,aAhBAV,EAAAU,aAiBAC,aAhBAX,EAAAW,aAiBAC,YAhBAZ,EAAAY,YAiBAC,UAhBAb,EAAAa,UAiBA/C,IAhBAkC,EAAAlC,IAiBAC,IAhBAiC,EAAAjC,KC9FJ,IAAA+C,EAAA,WAAA,SAAAA,IAGEC,KAAAR,SAAW,EAEXQ,KAAAP,WAAa,EAEbO,KAAAN,YAAc,GAEdM,KAAAJ,cAAe,EAEfI,KAAAF,UAAY,CAAC,KAAM,MAEnBE,KAAAd,eAAgB,EAEhBc,KAAAb,UAAW,EAEXa,KAAAX,YAAa,EAEbW,KAAAV,WAAY,EAEZU,KAAAL,cAAe,EAEfK,KAAAH,aAAc,EAEdG,KAAAC,aAAc,EAKhB,2BA9BC/D,EAAAA,aA8BD6D,EA9BA,GCmBaG,EAAgC,CAC3C/E,MAAO,KACPgF,OAAQ,IAAIJ,EACZlD,SAAU,CACRuD,mBAAmB,EACnBC,qBAAqB,EACrBC,qBAAqB,EAErBC,mBAAmB,EACnBC,qBAAqB,EACrBC,qBAAqB,EAErBC,mBAAmB,IAKvB,SAAgBC,EAAkB1B,EAAsB2B,GACtD,YADgC,IAAA3B,IAAAA,EAAAiB,GACxBU,EAAOxF,MACb,KAAKJ,EAAkBK,YACrB,OAAOX,OAAOmG,OAAO,GAAI5B,EAAO,CAAE9D,MAAOyF,EAAOtF,UAGlD,KAAKN,EAAkBS,aACrB,IACGuD,EAAeC,EAAMkB,OAAQS,EAAOtF,WFlB3CE,EEmBsBoF,EAAOtF,QFlB7BuB,EEkBsCoC,EAAMpC,UFhBvCrB,EAAMsF,MAIPtF,EAAMsF,KAAO,IAAMjE,EAASuD,mBAI5B5E,EAAMsF,KAAO,IAAMjE,EAAS0D,mBEU1B,OAAOtB,MAGH8B,EAAWnD,EAAWqB,EAAM9D,MAAO,CAAEkC,KAAMuD,EAAOtF,QAAQwF,OAEhE,OAAK7B,EAAMkB,OAAOnD,MAAOiC,EAAMkB,OAAOpD,KAASH,EAAaqC,EAAMkB,OAAQY,GAInErG,OAAOmG,OAAO,GAAI5B,EAAO,CAAE9D,MAAO4F,IAH9B9B,EAMb,KAAKjE,EAAkBW,eACrB,IACGqD,EAAeC,EAAMkB,OAAQS,EAAOtF,WFjB7C,SACEE,EACAqB,GAEA,QAAKrB,EAAMsF,SAGPtF,EAAMsF,KAAO,IAAMjE,EAASwD,wBAG5B7E,EAAMsF,KAAO,IAAMjE,EAAS2D,sBEQzBQ,CAAiBJ,EAAOtF,QAAS2D,EAAMpC,UAExC,OAAOoC,EAGH8B,EAAWnD,EAAWqB,EAAM9D,MAAO,CAAEqC,OAAQoD,EAAOtF,QAAQwF,OAElE,OAAK7B,EAAMkB,OAAOnD,MAAOiC,EAAMkB,OAAOpD,KAASH,EAAaqC,EAAMkB,OAAQY,GAInErG,OAAOmG,OAAO,GAAI5B,EAAO,CAAE9D,MAAO4F,IAHhC9B,EAMX,KAAKjE,EAAkBa,eACrB,IACGmD,EAAeC,EAAMkB,OAAQS,EAAOtF,WFjB7C,SACEE,EACAqB,GAEA,QAAKrB,EAAMsF,SAGPtF,EAAMsF,KAAO,IAAMjE,EAASyD,wBAG5B9E,EAAMsF,KAAO,IAAMjE,EAAS4D,sBEQzBQ,CAAiBL,EAAOtF,QAAS2D,EAAMpC,UAExC,OAAOoC,EAGH8B,EAAWnD,EAAWqB,EAAM9D,MAAO,CACvCuC,QAASkD,EAAOtF,QAAQwF,OAG1B,OAAK7B,EAAMkB,OAAOnD,MAAOiC,EAAMkB,OAAOpD,KAASH,EAAaqC,EAAMkB,OAAQY,GAInErG,OAAOmG,OAAO,GAAI5B,EAAO,CAAE9D,MAAO4F,IAHhC9B,EAMX,KAAKjE,EAAkBe,cACrB,IAAKiD,EAAeC,EAAMkB,QACxB,OAAOlB,EAGH8B,EAAWjF,EAAQmD,EAAM9D,MAAOyF,EAAOtF,SAE7C,OAAOZ,OAAOmG,OAAO,GAAI5B,EAAO,CAAE9D,MAAO4F,IAG3C,KAAK/F,EAAkBiB,oBACfiF,EFQZ,SACE/F,EACA8D,OAGQlC,EAAAkC,EAAAlC,IAAKC,EAAAiC,EAAAjC,IAAKwC,EAAAP,EAAAO,SAAUC,EAAAR,EAAAQ,WAAYC,EAAAT,EAAAS,YAAaG,EAAAZ,EAAAY,YAC/CsB,EAA0B,CAC9Bf,mBAAmB,EACnBC,qBAAqB,EACrBC,qBAAqB,EAErBC,mBAAmB,EACnBC,qBAAqB,EACrBC,qBAAqB,EAErBC,mBAAmB,GAGrB,IAAKvF,EACH,OAAOgG,EAIT,GAAInE,EAAK,KACDoE,EAAWxD,EAAWzC,EAAO,CAAEkC,KAAMmC,IAG3C,GAFA2B,EAAIf,kBAAoBpD,EAAMoE,GAEzBD,EAAIf,kBAAmB,KACpBiB,EAAczD,EAAWzC,EAAO,CAAEqC,OAAQiC,IAChD0B,EAAId,oBAAsBR,EACtB7C,EAAMqE,EACNrE,GAAOqE,EAGb,IAAKF,EAAId,oBAAqB,KACtBiB,EAAc1D,EAAWzC,EAAO,CAAEuC,QAASgC,IACjDyB,EAAIb,oBAAsBtD,GAAOsE,EAG/BnG,EAAMwB,WAnCY,KAoCpBwE,EAAIT,kBAAoB9C,EAAWzC,EAAO,CAAEkC,KApCxB,KAoCmDL,GAI3E,GAAID,EAAK,CACDqE,EAAWxD,EAAWzC,EAAO,CAAEkC,MAAOmC,IAG5C,GAFA2B,EAAIZ,kBAAoBxD,EAAMqE,GAEzBD,EAAIZ,kBAAmB,CACpBc,EAAczD,EAAWzC,EAAO,CAAEqC,QAASiC,IACjD0B,EAAIX,oBAAsBX,EACtB9C,EAAMsE,EACNtE,GAAOsE,EAGb,IAAKF,EAAIX,oBAAqB,CACtBc,EAAc1D,EAAWzC,EAAO,CAAEuC,SAAUgC,IAClDyB,EAAIV,oBAAsB1D,GAAOuE,EAG/BnG,EAAMwB,YAxDY,KAyDpBwE,EAAIT,kBAAoB9C,EAAWzC,EAAO,CAAEkC,MAzDxB,KAyDoDN,GAI5E,OAAOoE,EEzEuBI,CAAmBtC,EAAM9D,MAAOyF,EAAOtF,SAC3DkG,EAA6B,CACjCrG,MAAO8D,EAAM9D,MACbgF,OAAQS,EAAOtF,QACfuB,SAAUqE,GASZ,OANIjC,EAAMkB,OAAOP,eAAiB4B,EAAUrB,OAAOP,cAC7CX,EAAM9D,QACRqG,EAAUrG,MAAQ,IAAIsB,KAAKwC,EAAM9D,QAI9BT,OAAOmG,OAAO,GAAI5B,EAAOuC,GAGlC,QACE,OAAOvC,EFlGb,IACEzD,EACAqB,oBGlBA,SAAA4E,IAAA,IACQC,EAAc,IAAIC,EAAAA,gBAAwB,CAC9CvG,KAAM,gCAEF6D,EAAQ,IAAI2C,EAAAA,UAChB1B,EACAwB,EACAf,UAEFkB,EAAAC,KAAA9B,KAAM0B,EAAaf,EAAmB1B,IAAMe,KAEhD,ONAO,SAAmBxF,EAAGC,GAEzB,SAASsH,IAAO/B,KAAKgC,YAAcxH,EADnCD,EAAcC,EAAGC,GAEjBD,EAAES,UAAkB,OAANR,EAAaC,OAAOuH,OAAOxH,IAAMsH,EAAG9G,UAAYR,EAAEQ,UAAW,IAAI8G,GMf9CG,CAAAA,EAAAA,uBADpChG,EAAAA,mDAaDuF,GAZqCU,EAAAA,WC+BxBC,EAA+D,CAC1EC,QAASC,EAAAA,kBAETC,YAAaC,EAAAA,WAAU,WAAO,OAAAC,IAC9BC,OAAO,GAGTD,EAAA,WA8GE,SAAAA,EACEE,EACQC,EACAC,EACAC,GAJV,IAAAC,EAAA/C,KAEUA,KAAA4C,IAAAA,EACA5C,KAAA6C,OAAAA,EACA7C,KAAA8C,mBAAAA,EA7CA9C,KAAAgD,QAAU,IAAIC,EAAAA,aAkBxBjD,KAAAkD,cAAe,EACflD,KAAAmD,gBAAiB,EACjBnD,KAAAoD,gBAAiB,EAejBpD,KAAAqD,SAAWC,SAASrI,UAEpB+E,KAAAuD,UAAYD,SAASrI,UAUnBP,OAAOmG,OAAOb,KAAM2C,GAEpB3C,KAAKwD,cAAgBX,EAClBY,OAAM,SAACxE,GAAS,OAAAA,EAAM9D,QACtBuI,UAAS,SAAEvI,GAEV4H,EAAKY,YAAYxI,GACjB4H,EAAKM,SAASlI,GAEd4H,EAAKF,OAAOe,SACVb,EAAKD,mBAAmB9G,eAAeuD,EAAiBwD,OAI9DF,EACGY,OAAM,SAACxE,GAAS,OAAAA,EAAMpC,WACtB6G,UAAS,SAAEG,GACVd,EAAKC,QAAQc,KAAK/E,EAAagE,EAAK5E,MAAO4E,EAAKhF,QAASgF,EAAKrF,QAASqF,EAAK3F,SAC5E1C,OAAOmG,OAAOkC,EAAMc,GACpBjB,EAAImB,iBAiNZ,OA1QErJ,OAAAsJ,eAAIvB,EAAAxH,UAAA,oBAAiB,KAArB,WACE,OAAO+E,KAAKL,eAAiBK,KAAKd,+CAGpCxE,OAAAsJ,eAAIvB,EAAAxH,UAAA,aAAU,KAAd,WACE,QAAS+E,KAAKd,eAAiBc,KAAKb,2CAwDtCsD,EAAAxH,UAAAgJ,gBAAA,WACEjE,KAAKkD,cAAe,EACpBlD,KAAKmD,gBAAiB,EACtBnD,KAAKoD,gBAAiB,GAGxBX,EAAAxH,UAAAmC,KAAA,WACE,OAAO4C,KAAKJ,cAAgBI,KAAKkE,WAAalE,KAAKF,UAAU,IAG/D2C,EAAAxH,UAAAkJ,QAAA,SAAQC,GACNA,EAAOC,kBAGT5B,EAAAxH,UAAAqJ,UAAA,SAAUF,GACR,OAAmC,EAA5BG,KAAKC,KAAKJ,EAAOK,SAG1BhC,EAAAxH,UAAAyJ,YAAA,SAAYC,GACV3E,KAAK6C,OAAOe,SACV5D,KAAK8C,mBAAmB9G,eAAeuD,EAAiBS,SAI5DyC,EAAAxH,UAAAM,YAAA,SAAYuF,EAAc1B,QAAA,IAAAA,IAAAA,EAAA,IACxBY,KAAKiE,kBACLjE,KAAK6C,OAAOe,SAAS5D,KAAK8C,mBAAmBvH,YAAY,CAAEuF,KAAIA,EAAE1B,OAAMA,MAGzEqD,EAAAxH,UAAAS,cAAA,SAAcoF,EAAc1B,QAAA,IAAAA,IAAAA,EAAA,IAC1BY,KAAKiE,kBACLjE,KAAK6C,OAAOe,SACV5D,KAAK8C,mBAAmBpH,cAAc,CAAEoF,KAAIA,EAAE1B,OAAMA,MAIxDqD,EAAAxH,UAAAW,cAAA,SAAckF,EAAc1B,QAAA,IAAAA,IAAAA,EAAA,IAC1BY,KAAKiE,kBACLjE,KAAK6C,OAAOe,SACV5D,KAAK8C,mBAAmBlH,cAAc,CAAEkF,KAAIA,EAAE1B,OAAMA,MAIxDqD,EAAAxH,UAAA2J,YAAA,SAAYzG,GAMV,GALA6B,KAAKiE,kBACLjE,KAAK7B,MAAQA,IAEGS,EAAiBoB,KAAK7B,MAAO6B,KAAK5C,SAAW4C,KAAKpD,gBAOhE,OAJAoD,KAAKkD,cAAe,EACpBlD,KAAKgD,QAAQc,MAAK,QAClB9D,KAAKqD,SAAS,MAKhBrD,KAAK6E,eAGPpC,EAAAxH,UAAA6J,cAAA,SAAc/G,GAMZ,GALAiC,KAAKiE,kBACLjE,KAAKjC,QAAUA,IAECc,EAAmBmB,KAAKjC,UAAYiC,KAAKpD,gBAOvD,OAJAoD,KAAKmD,gBAAiB,EACtBnD,KAAKgD,QAAQc,MAAK,QAClB9D,KAAKqD,SAAS,MAKhBrD,KAAK6E,eAGPpC,EAAAxH,UAAA8J,cAAA,SAAcrH,GAMZ,GALAsC,KAAKiE,kBACLjE,KAAKtC,QAAUA,IAECoB,EAAmBkB,KAAKtC,UAAYsC,KAAKpD,gBAOvD,OAJAoD,KAAKoD,gBAAiB,EACtBpD,KAAKgD,QAAQc,MAAK,QAClB9D,KAAKqD,SAAS,MAKhBrD,KAAK6E,eAGPpC,EAAAxH,UAAA2B,aAAA,WACE,OLxG8BiB,EKwGL,CACvBR,KAAM2C,KAAK7B,MACXX,OAAQwC,KAAKjC,QACbL,QAASsC,KAAKtC,QACdN,KAAM4C,KAAK5C,QL5G6BJ,EK6GvCgD,KAAKhD,IL7G6CD,EK6GxCiD,KAAKjD,IL5GdD,EAAUhB,EAAQ,IAAIW,KAAQoB,KAEhCb,GAAOF,EAAUE,GAIjBD,GAAOD,EAAUC,GAPvB,IAAkCc,EAAYb,EAAWD,EACjDD,GK+GN2F,EAAAxH,UAAA4J,YAAA,eACQG,EAAWhF,KAAKH,YAAcG,KAAKtC,aAAU,EAC7CuH,EAAWjF,KAAKC,YAAcD,KAAKjC,aAAU,EACnD,IAAKgB,EAAaiB,KAAK7B,MAAO8G,EAAUD,EAAUhF,KAAK5C,QAIrD,OAHA4C,KAAKgD,QAAQc,MAAK,QAClB9D,KAAKqD,SAAS,MAKhBrD,KAAK6C,OAAOe,SACV5D,KAAK8C,mBAAmBhH,QAAQ,CAC9BuB,KAAM2C,KAAK7B,MACXX,OAAQwC,KAAKjC,QACbL,QAASsC,KAAKtC,QACdN,KAAM4C,KAAK5C,WAKjBqF,EAAAxH,UAAAiK,eAAA,WACE,GAAKlF,KAAKJ,cAAiBI,KAAKmF,WAAhC,CAKAnF,KAAK6C,OAAOe,SACV5D,KAAK8C,mBAAmBvH,YAAY,CAClCuF,KAHqB,GAIrB1B,OAAQ,QAQdqD,EAAAxH,UAAAC,WAAA,SAAWkK,GACL5I,EAAY4I,GACdpF,KAAK6C,OAAOe,SAAS5D,KAAK8C,mBAAmB5H,WAAWyC,EAAUyH,KAClD,MAAPA,GACTpF,KAAK6C,OAAOe,SAAS5D,KAAK8C,mBAAmB5H,WAAW,QAQ5DuH,EAAAxH,UAAAoK,iBAAA,SAAiBC,GACftF,KAAKqD,SAAWiC,GAMlB7C,EAAAxH,UAAAsK,kBAAA,SAAkBD,GAChBtF,KAAKuD,UAAY+B,GASnB7C,EAAAxH,UAAAuK,iBAAA,SAAiBC,GACfzF,KAAKb,SAAWsG,EAChBzF,KAAK4C,IAAImB,gBAGXtB,EAAAxH,UAAAyK,YAAA,WACE1F,KAAKwD,cAAcmC,eAGblD,EAAAxH,UAAA0I,YAAR,SAAoBxI,GAClB,IAAKqB,EAAYrB,GAMf,OALA6E,KAAK7B,MAAQ,GACb6B,KAAKjC,QAAU,GACfiC,KAAKtC,QAAU,QACfsC,KAAKkE,SAAWlE,KAAKF,UAAU,QAK3BrB,EAASd,EAAUxC,GAErByK,EAASnH,EAAO9B,WAEhBqD,KAAKJ,eACPI,KAAKkE,SAAWlE,KAAKF,UAAU8F,GAJR,GAIqC,EAAI,GAGjD,KAFfA,GALuB,MAQrBA,EARqB,KAYzB5F,KAAK7B,MAAQK,EAAUoH,GACvB5F,KAAKjC,QAAUS,EAAUC,EAAOT,cAChCgC,KAAKtC,QAAUc,EAAUC,EAAOoH,sCAtVnCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,aACVC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,UAAW,CAAChE,EAAmCX,GAC/C4E,SAAA,+iKA2BAC,cAAeC,EAAAA,kBAAkBC,aA1BxB,4hBAnCFzG,SAhBP0G,EAAAA,yBAcOhF,SADAzG,uCAyEN0L,EAAAA,0BAEAA,EAAAA,2BAEAA,EAAAA,6BAEAA,EAAAA,wBAEAA,EAAAA,0BAEAA,EAAAA,yBAEAA,EAAAA,4BAEAA,EAAAA,4BAEAA,EAAAA,2BAEAA,EAAAA,2BAEAA,EAAAA,yBAEAA,EAAAA,mBAEAA,EAAAA,mBAEAA,EAAAA,uBAGAC,EAAAA,UAmRHlE,EAxVA,GCjDAmE,EAAA,WAQA,SAAAA,KAYA,OANSA,EAAAC,QAAP,WACE,MAAO,CACLC,SAAUF,EACVR,UAAW,CAACrG,EAAkB/E,EAAmByG,yBATtDsF,EAAAA,SAAQhB,KAAA,CAAC,CACRiB,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACzE,GACf0E,QAAS,CAAC1E,OASZmE,EApBA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Action } from 'ngx-bootstrap/mini-ngrx';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  Time\n} from '../timepicker.models';\n\n@Injectable()\nexport class TimepickerActions {\n  static readonly WRITE_VALUE = '[timepicker] write value from ng model';\n  static readonly CHANGE_HOURS = '[timepicker] change hours';\n  static readonly CHANGE_MINUTES = '[timepicker] change minutes';\n  static readonly CHANGE_SECONDS = '[timepicker] change seconds';\n  static readonly SET_TIME_UNIT = '[timepicker] set time unit';\n  static readonly UPDATE_CONTROLS = '[timepicker] update controls';\n\n  writeValue(value: Date | string) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n\n  changeHours(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n\n  changeMinutes(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n\n  changeSeconds(event: TimeChangeEvent): Action {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n\n  setTime(value: Time): Action {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n\n  updateControls(value: TimepickerComponentState): Action {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\n}\n","import { Time, TimepickerComponentState } from './timepicker.models';\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\n\nexport function isValidDate(value?: string | Date): boolean {\n  if (!value) {\n    return false;\n  }\n\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n\n  return true;\n}\n\nexport function isValidLimit(controls: TimepickerComponentState, newDate: Date): boolean {\n  if (controls.min && newDate < controls.min) {\n    return false;\n  }\n\n  if (controls.max && newDate > controls.max) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function toNumber(value: string | number): number {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, dex);\n}\n\nexport function isNumber(value: string | number): value is number {\n  return !isNaN(toNumber(value));\n}\n\nexport function parseHours(\n  value: string | number,\n  isPM = false\n): number {\n  const hour = toNumber(value);\n  if (\n    isNaN(hour) ||\n    hour < 0 ||\n    hour > (isPM ? hoursPerDayHalf : hoursPerDay)\n  ) {\n    return NaN;\n  }\n\n  return hour;\n}\n\nexport function parseMinutes(value: string | number): number {\n  const minute = toNumber(value);\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n\n  return minute;\n}\n\nexport function parseSeconds(value: string | number): number {\n  const seconds = toNumber(value);\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n\n  return seconds;\n}\n\nexport function parseTime(value: string | Date): Date {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n\n  return value;\n}\n\nexport function changeTime(value: Date, diff: Time): Date {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n\n  if (diff.hour) {\n    hour = (hour + toNumber(diff.hour)) % hoursPerDay;\n    if (hour < 0) {\n      hour += hoursPerDay;\n    }\n  }\n\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n\n  return createDate(value, hour, minutes, seconds);\n}\n\nexport function setTime(value: Date, opts: Time): Date {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n\n  if (opts.isPM && hour !== 12) {\n    hour += hoursPerDayHalf;\n  }\n\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n\n    return value;\n  }\n\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n\n  return createDate(value, hour, minute, seconds);\n}\n\nexport function createDate(\n  value: Date,\n  hours: number,\n  minutes: number,\n  seconds: number\n): Date {\n  return new Date(\n    value.getFullYear(),\n    value.getMonth(),\n    value.getDate(),\n    hours,\n    minutes,\n    seconds,\n    value.getMilliseconds()\n  );\n}\n\nexport function padNumber(value: number): string {\n  const _value = value.toString();\n  if (_value.length > 1) {\n    return _value;\n  }\n\n  return `0${_value}`;\n}\n\nexport function isHourInputValid(hours: string, isPM: boolean): boolean {\n  return !isNaN(parseHours(hours, isPM));\n}\n\nexport function isMinuteInputValid(minutes: string): boolean {\n  return !isNaN(parseMinutes(minutes));\n}\n\nexport function isSecondInputValid(seconds: string): boolean {\n  return !isNaN(parseSeconds(seconds));\n}\n\nexport function isInputLimitValid(diff: Time, max: Date, min: Date): boolean {\n  const newDate = setTime(new Date(), diff);\n\n  if (max && newDate > max) {\n    return false;\n  }\n\n  if (min && newDate < min) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isInputValid(\n  hours: string,\n  minutes = '0',\n  seconds = '0',\n  isPM: boolean\n): boolean {\n  return isHourInputValid(hours, isPM)\n    && isMinuteInputValid(minutes)\n    && isSecondInputValid(seconds);\n}\n","import { changeTime } from './timepicker.utils';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\n\nexport function canChangeValue(\n  state: TimepickerComponentState,\n  event?: TimeChangeEvent\n): boolean {\n  if (state.readonlyInput || state.disabled) {\n    return false;\n  }\n\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function canChangeHours(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeMinutes(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeSeconds(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function getControlsValue(\n  state: TimepickerComponentState\n): TimepickerComponentState {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\n\nexport function timepickerControls(\n  value: Date,\n  state: TimepickerComponentState\n): TimepickerControls {\n  const hoursPerDayHalf = 12;\n  const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n  const res: TimepickerControls = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n\n    canToggleMeridian: true\n  };\n\n  if (!value) {\n    return res;\n  }\n\n  // compare dates\n  if (max) {\n    const _newHour = changeTime(value, { hour: hourStep });\n    res.canIncrementHours = max > _newHour;\n\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, { minute: minuteStep });\n      res.canIncrementMinutes = showSeconds\n        ? max > _newMinutes\n        : max >= _newMinutes;\n    }\n\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: secondsStep });\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n\n    if (value.getHours() < hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\n    }\n  }\n\n  if (min) {\n    const _newHour = changeTime(value, { hour: -hourStep });\n    res.canDecrementHours = min < _newHour;\n\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, { minute: -minuteStep });\n      res.canDecrementMinutes = showSeconds\n        ? min < _newMinutes\n        : min <= _newMinutes;\n    }\n\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: -secondsStep });\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n\n    if (value.getHours() >= hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\n    }\n  }\n\n  return res;\n}\n","import { Injectable } from '@angular/core';\n\n/** Provides default configuration values for timepicker */\n@Injectable()\nexport class TimepickerConfig {\n  /** hours change step */\n  hourStep = 1;\n  /** hours change step */\n  minuteStep = 5;\n  /** seconds changes step */\n  secondsStep = 10;\n  /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n  showMeridian = true;\n  /** meridian labels based on locale */\n  meridians = ['AM', 'PM'];\n  /** if true hours and minutes fields will be readonly */\n  readonlyInput = false;\n  /** if true hours and minutes fields will be disabled */\n  disabled = false;\n  /** if true scroll inside hours and minutes inputs will change time */\n  mousewheel = true;\n  /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n  arrowkeys = true;\n  /** if true spinner arrows above and below the inputs will be shown */\n  showSpinners = true;\n  /** show seconds in timepicker */\n  showSeconds = false;\n  /** show minutes in timepicker */\n  showMinutes = true;\n  /** minimum time user can select */\n  min: Date;\n  /** maximum time user can select */\n  max: Date;\n}\n","import { Action } from 'ngx-bootstrap/mini-ngrx';\nimport {\n  canChangeHours,\n  canChangeMinutes,\n  canChangeSeconds,\n  canChangeValue,\n  timepickerControls\n} from '../timepicker-controls.util';\nimport { TimepickerConfig } from '../timepicker.config';\nimport {\n  TimepickerComponentState,\n  TimepickerControls\n} from '../timepicker.models';\nimport { changeTime, setTime, isValidLimit } from '../timepicker.utils';\nimport { TimepickerActions } from './timepicker.actions';\n\nexport class TimepickerState {\n  value: Date;\n  config: TimepickerComponentState;\n  controls: TimepickerControls;\n}\n\nexport const initialState: TimepickerState = {\n  value: null,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n\n    canToggleMeridian: true\n  }\n};\n\n// tslint:disable-next-line:cyclomatic-complexity\nexport function timepickerReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE: {\n      return Object.assign({}, state, { value: action.payload });\n    }\n\n    case TimepickerActions.CHANGE_HOURS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeHours(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { hour: action.payload.step });\n\n      if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n      }\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_MINUTES: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeMinutes(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { minute: action.payload.step });\n\n      if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n        return state;\n      }\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_SECONDS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeSeconds(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, {\n        seconds: action.payload.step\n      });\n\n      if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n        return state;\n      }\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.SET_TIME_UNIT: {\n      if (!canChangeValue(state.config)) {\n        return state;\n      }\n\n      const _newTime = setTime(state.value, action.payload);\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.UPDATE_CONTROLS: {\n      const _newControlsState = timepickerControls(state.value, action.payload);\n      const _newState: TimepickerState = {\n        value: state.value,\n        config: action.payload,\n        controls: _newControlsState\n      };\n\n      if (state.config.showMeridian !== _newState.config.showMeridian) {\n        if (state.value) {\n          _newState.value = new Date(state.value);\n        }\n      }\n\n      return Object.assign({}, state, _newState);\n    }\n\n    default:\n      return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  timepickerReducer,\n  TimepickerState,\n  initialState\n} from './timepicker.reducer';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Action, MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\n\n@Injectable()\nexport class TimepickerStore extends MiniStore<TimepickerState> {\n  constructor() {\n    const _dispatcher = new BehaviorSubject<Action>({\n      type: '[mini-ngrx] dispatcher init'\n    });\n    const state = new MiniState<TimepickerState>(\n      initialState,\n      _dispatcher,\n      timepickerReducer\n    );\n    super(_dispatcher, timepickerReducer, state);\n  }\n}\n","/* tslint:disable:no-forward-ref max-file-line-count */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges, ViewEncapsulation\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerStore } from './reducer/timepicker.store';\nimport { getControlsValue } from './timepicker-controls.util';\nimport { TimepickerConfig } from './timepicker.config';\n\nimport {\n  TimeChangeSource,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\n\nimport {\n  isValidDate,\n  padNumber,\n  parseTime,\n  isInputValid,\n  isHourInputValid,\n  isMinuteInputValid,\n  isSecondInputValid,\n  isInputLimitValid\n} from './timepicker.utils';\n\nimport { Subscription } from 'rxjs';\n\nimport { ControlValueAccessorModel } from './models';\n\nexport const TIMEPICKER_CONTROL_VALUE_ACCESSOR: ControlValueAccessorModel = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'timepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n  templateUrl: './timepicker.component.html',\n  styles: [`\n    .bs-chevron {\n      border-style: solid;\n      display: block;\n      width: 9px;\n      height: 9px;\n      position: relative;\n      border-width: 3px 0px 0 3px;\n    }\n\n    .bs-chevron-up {\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      top: 2px;\n    }\n\n    .bs-chevron-down {\n      -webkit-transform: rotate(-135deg);\n      transform: rotate(-135deg);\n      top: -2px;\n    }\n\n    .bs-timepicker-field {\n      width: 50px;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TimepickerComponent\n  implements ControlValueAccessor,\n    TimepickerComponentState,\n    TimepickerControls,\n    OnChanges,\n    OnDestroy {\n  /** hours change step */\n  @Input() hourStep: number;\n  /** hours change step */\n  @Input() minuteStep: number;\n  /** seconds change step */\n  @Input() secondsStep: number;\n  /** if true hours and minutes fields will be readonly */\n  @Input() readonlyInput: boolean;\n  /** if true hours and minutes fields will be disabled */\n  @Input() disabled: boolean;\n  /** if true scroll inside hours and minutes inputs will change time */\n  @Input() mousewheel: boolean;\n  /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n  @Input() arrowkeys: boolean;\n  /** if true spinner arrows above and below the inputs will be shown */\n  @Input() showSpinners: boolean;\n  /** if true meridian button will be shown */\n  @Input() showMeridian: boolean;\n  /** show minutes in timepicker */\n  @Input() showMinutes: boolean;\n  /** show seconds in timepicker */\n  @Input() showSeconds: boolean;\n  /** meridian labels based on locale */\n  @Input() meridians: string[];\n  /** minimum time user can select */\n  @Input() min: Date;\n  /** maximum time user can select */\n  @Input() max: Date;\n\n  /** emits true if value is a valid date */\n  @Output() isValid = new EventEmitter<boolean>();\n\n  // ui variables\n  hours: string;\n  minutes: string;\n  seconds: string;\n  meridian: string;\n\n  /** @deprecated - please use `isEditable` instead */\n  get isSpinnersVisible(): boolean {\n    return this.showSpinners && !this.readonlyInput;\n  }\n\n  get isEditable(): boolean {\n    return !(this.readonlyInput || this.disabled);\n  }\n\n  // min\\max validation for input fields\n  invalidHours = false;\n  invalidMinutes = false;\n  invalidSeconds = false;\n\n  // time picker controls state\n  canIncrementHours: boolean;\n  canIncrementMinutes: boolean;\n  canIncrementSeconds: boolean;\n\n  canDecrementHours: boolean;\n  canDecrementMinutes: boolean;\n  canDecrementSeconds: boolean;\n\n  canToggleMeridian: boolean;\n\n  // control value accessor methods\n  // tslint:disable-next-line:no-any\n  onChange = Function.prototype;\n  // tslint:disable-next-line:no-any\n  onTouched = Function.prototype;\n\n  timepickerSub: Subscription;\n\n  constructor(\n    _config: TimepickerConfig,\n    private _cd: ChangeDetectorRef,\n    private _store: TimepickerStore,\n    private _timepickerActions: TimepickerActions\n  ) {\n    Object.assign(this, _config);\n\n    this.timepickerSub = _store\n      .select(state => state.value)\n      .subscribe((value: Date) => {\n        // update UI values if date changed\n        this._renderTime(value);\n        this.onChange(value);\n\n        this._store.dispatch(\n          this._timepickerActions.updateControls(getControlsValue(this))\n        );\n      });\n\n    _store\n      .select(state => state.controls)\n      .subscribe((controlsState: TimepickerControls) => {\n        this.isValid.emit(isInputValid(this.hours, this.minutes, this.seconds, this.isPM()));\n        Object.assign(this, controlsState);\n        _cd.markForCheck();\n      });\n  }\n\n  resetValidation(): void {\n    this.invalidHours = false;\n    this.invalidMinutes = false;\n    this.invalidSeconds = false;\n  }\n\n  isPM(): boolean {\n    return this.showMeridian && this.meridian === this.meridians[1];\n  }\n\n  prevDef($event: Event) {\n    $event.preventDefault();\n  }\n\n  wheelSign($event: WheelEventInit): number {\n    return Math.sign($event.deltaY) * -1;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._store.dispatch(\n      this._timepickerActions.updateControls(getControlsValue(this))\n    );\n  }\n\n  changeHours(step: number, source: TimeChangeSource = ''): void {\n    this.resetValidation();\n    this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n  }\n\n  changeMinutes(step: number, source: TimeChangeSource = ''): void {\n    this.resetValidation();\n    this._store.dispatch(\n      this._timepickerActions.changeMinutes({ step, source })\n    );\n  }\n\n  changeSeconds(step: number, source: TimeChangeSource = ''): void {\n    this.resetValidation();\n    this._store.dispatch(\n      this._timepickerActions.changeSeconds({ step, source })\n    );\n  }\n\n  updateHours(hours: string): void {\n    this.resetValidation();\n    this.hours = hours;\n\n    const isValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n\n    if (!isValid) {\n      this.invalidHours = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  updateMinutes(minutes: string) {\n    this.resetValidation();\n    this.minutes = minutes;\n\n    const isValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n\n    if (!isValid) {\n      this.invalidMinutes = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  updateSeconds(seconds: string) {\n    this.resetValidation();\n    this.seconds = seconds;\n\n    const isValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n\n    if (!isValid) {\n      this.invalidSeconds = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  isValidLimit(): boolean {\n    return isInputLimitValid({\n      hour: this.hours,\n      minute: this.minutes,\n      seconds: this.seconds,\n      isPM: this.isPM()\n    }, this.max, this.min);\n  }\n\n  _updateTime() {\n    const _seconds = this.showSeconds ? this.seconds : void 0;\n    const _minutes = this.showMinutes ? this.minutes : void 0;\n    if (!isInputValid(this.hours, _minutes, _seconds, this.isPM())) {\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._store.dispatch(\n      this._timepickerActions.setTime({\n        hour: this.hours,\n        minute: this.minutes,\n        seconds: this.seconds,\n        isPM: this.isPM()\n      })\n    );\n  }\n\n  toggleMeridian(): void {\n    if (!this.showMeridian || !this.isEditable) {\n      return;\n    }\n\n    const _hoursPerDayHalf = 12;\n    this._store.dispatch(\n      this._timepickerActions.changeHours({\n        step: _hoursPerDayHalf,\n        source: ''\n      })\n    );\n  }\n\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj: string | null | undefined | Date): void {\n    if (isValidDate(obj)) {\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n    } else if (obj == null) {\n      this._store.dispatch(this._timepickerActions.writeValue(null));\n    }\n  }\n\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  // tslint:disable-next-line:no-any\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * This function is called when the control status changes to or from \"disabled\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._cd.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this.timepickerSub.unsubscribe();\n  }\n\n  private _renderTime(value: string | Date): void {\n    if (!isValidDate(value)) {\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = this.meridians[0];\n\n      return;\n    }\n\n    const _value = parseTime(value);\n    const _hoursPerDayHalf = 12;\n    let _hours = _value.getHours();\n\n    if (this.showMeridian) {\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n      _hours = _hours % _hoursPerDayHalf;\n      // should be 12 PM, not 00 PM\n      if (_hours === 0) {\n        _hours = _hoursPerDayHalf;\n      }\n    }\n\n    this.hours = padNumber(_hours);\n    this.minutes = padNumber(_value.getMinutes());\n    this.seconds = padNumber(_value.getUTCSeconds());\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TimepickerComponent } from './timepicker.component';\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerConfig } from './timepicker.config';\nimport { TimepickerStore } from './reducer/timepicker.store';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TimepickerComponent],\n  exports: [TimepickerComponent]\n})\nexport class TimepickerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TimepickerModule,\n      providers: [TimepickerConfig, TimepickerActions, TimepickerStore]\n    };\n  }\n}\n"]}