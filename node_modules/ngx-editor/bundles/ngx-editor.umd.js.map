{"version":3,"file":"ngx-editor.umd.js.map","sources":["ng://ngx-editor/app/ngx-editor/common/utils/ngx-editor.utils.ts","ng://ngx-editor/app/ngx-editor/common/services/command-executor.service.ts","ng://ngx-editor/app/ngx-editor/common/services/message.service.ts","ng://ngx-editor/app/ngx-editor/common/ngx-editor.defaults.ts","ng://ngx-editor/app/ngx-editor/ngx-editor.component.ts","ng://ngx-editor/app/ngx-editor/ngx-grippie/ngx-grippie.component.ts","ng://ngx-editor/app/ngx-editor/ngx-editor-message/ngx-editor-message.component.ts","ng://ngx-editor/app/ngx-editor/ngx-editor-toolbar/ngx-editor-toolbar.component.ts","ng://ngx-editor/app/ngx-editor/ngx-editor.module.ts","ng://ngx-editor/app/ngx-editor/validators/maxlength-validator.ts"],"sourcesContent":["/**\n * enable or disable toolbar based on configuration\n *\n * @param value toolbar item\n * @param toolbar toolbar configuration object\n */\nexport function canEnableToolbarOptions(value: string, toolbar: any): boolean {\n  if (value) {\n    if (toolbar['length'] === 0) {\n      return true;\n    } else {\n      const found = toolbar.filter(array => {\n        return array.indexOf(value) !== -1;\n      });\n\n      return found.length ? true : false;\n    }\n  } else {\n    return false;\n  }\n}\n\n/**\n * set editor configuration\n *\n * @param value configuration via [config] property\n * @param ngxEditorConfig default editor configuration\n * @param input direct configuration inputs via directives\n */\nexport function getEditorConfiguration(value: any, ngxEditorConfig: any, input: any): any {\n  for (const i in ngxEditorConfig) {\n    if (i) {\n      if (input[i] !== undefined) {\n        value[i] = input[i];\n      }\n      if (!value.hasOwnProperty(i)) {\n        value[i] = ngxEditorConfig[i];\n      }\n    }\n  }\n\n  return value;\n}\n\n/**\n * return vertical if the element is the resizer property is set to basic\n *\n * @param resizer type of resizer, either basic or stack\n */\nexport function canResize(resizer: string): any {\n  if (resizer === 'basic') {\n    return 'vertical';\n  }\n  return false;\n}\n\n/**\n * save selection when the editor is focussed out\n */\nexport function saveSelection(): any {\n  if (window.getSelection) {\n    const sel = window.getSelection();\n    if (sel.getRangeAt && sel.rangeCount) {\n      return sel.getRangeAt(0);\n    }\n  } else if (document.getSelection && document.createRange) {\n    return document.createRange();\n  }\n  return null;\n}\n\n/**\n * restore selection when the editor is focussed in\n *\n * @param range saved selection when the editor is focussed out\n */\nexport function restoreSelection(range): boolean {\n  if (range) {\n    if (window.getSelection) {\n      const sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n      return true;\n    } else if (document.getSelection && range.select) {\n      range.select();\n      return true;\n    }\n  } else {\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest } from '@angular/common/http';\nimport * as Utils from '../utils/ngx-editor.utils';\n\n@Injectable()\nexport class CommandExecutorService {\n  /** saves the selection from the editor when focussed out */\n  savedSelection: any = undefined;\n\n  /**\n   *\n   * @param _http HTTP Client for making http requests\n   */\n  constructor(private _http: HttpClient) { }\n\n  /**\n   * executes command from the toolbar\n   *\n   * @param command command to be executed\n   */\n  execute(command: string): void {\n    if (!this.savedSelection && command !== 'enableObjectResizing') {\n      throw new Error('Range out of Editor');\n    }\n\n    if (command === 'enableObjectResizing') {\n      document.execCommand('enableObjectResizing', true);\n    }\n\n    if (command === 'blockquote') {\n      document.execCommand('formatBlock', false, 'blockquote');\n    }\n\n    if (command === 'removeBlockquote') {\n      document.execCommand('formatBlock', false, 'div');\n    }\n\n    document.execCommand(command, false, null);\n  }\n\n  /**\n   * inserts image in the editor\n   *\n   * @param imageURI url of the image to be inserted\n   */\n  insertImage(imageURI: string): void {\n    if (this.savedSelection) {\n      if (imageURI) {\n        const restored = Utils.restoreSelection(this.savedSelection);\n        if (restored) {\n          const inserted = document.execCommand('insertImage', false, imageURI);\n          if (!inserted) {\n            throw new Error('Invalid URL');\n          }\n        }\n      }\n    } else {\n      throw new Error('Range out of the editor');\n    }\n  }\n\n  /**\n * inserts image in the editor\n *\n * @param videParams url of the image to be inserted\n */\n  insertVideo(videParams: any): void {\n    if (this.savedSelection) {\n      if (videParams) {\n        const restored = Utils.restoreSelection(this.savedSelection);\n        if (restored) {\n          if (this.isYoutubeLink(videParams.videoUrl)) {\n            const youtubeURL = '<iframe width=\"' + videParams.width + '\" height=\"' + videParams.height + '\"'\n              + 'src=\"' + videParams.videoUrl + '\"></iframe>';\n            this.insertHtml(youtubeURL);\n          } else if (this.checkTagSupportInBrowser('video')) {\n\n            if (this.isValidURL(videParams.videoUrl)) {\n              const videoSrc = '<video width=\"' + videParams.width + '\" height=\"' + videParams.height + '\"'\n                + ' controls=\"true\"><source src=\"' + videParams.videoUrl + '\"></video>';\n              this.insertHtml(videoSrc);\n            } else {\n              throw new Error('Invalid video URL');\n            }\n\n          } else {\n            throw new Error('Unable to insert video');\n          }\n        }\n      }\n    } else {\n      throw new Error('Range out of the editor');\n    }\n  }\n\n  /**\n   * checks the input url is a valid youtube URL or not\n   *\n   * @param url Youtue URL\n   */\n  private isYoutubeLink(url: string): boolean {\n    const ytRegExp = /^(http(s)?:\\/\\/)?((w){3}.)?youtu(be|.be)?(\\.com)?\\/.+/;\n    return ytRegExp.test(url);\n  }\n\n  /**\n   * check whether the string is a valid url or not\n   * @param url url\n   */\n  private isValidURL(url: string) {\n    const urlRegExp = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\n    return urlRegExp.test(url);\n  }\n\n  /**\n   * uploads image to the server\n   *\n   * @param file file that has to be uploaded\n   * @param endPoint enpoint to which the image has to be uploaded\n   */\n  uploadImage(file: File, endPoint: string): any {\n    if (!endPoint) {\n      throw new Error('Image Endpoint isn`t provided or invalid');\n    }\n\n    const formData: FormData = new FormData();\n\n    if (file) {\n\n      formData.append('file', file);\n\n      const req = new HttpRequest('POST', endPoint, formData, {\n        reportProgress: true\n      });\n\n      return this._http.request(req);\n\n    } else {\n      throw new Error('Invalid Image');\n    }\n  }\n\n  /**\n   * inserts link in the editor\n   *\n   * @param params parameters that holds the information for the link\n   */\n  createLink(params: any): void {\n    if (this.savedSelection) {\n      /**\n       * check whether the saved selection contains a range or plain selection\n       */\n      if (params.urlNewTab) {\n        const newUrl = '<a href=\"' + params.urlLink + '\" target=\"_blank\">' + params.urlText + '</a>';\n\n        if (document.getSelection().type !== 'Range') {\n          const restored = Utils.restoreSelection(this.savedSelection);\n          if (restored) {\n            this.insertHtml(newUrl);\n          }\n        } else {\n          throw new Error('Only new links can be inserted. You cannot edit URL`s');\n        }\n      } else {\n        const restored = Utils.restoreSelection(this.savedSelection);\n        if (restored) {\n          document.execCommand('createLink', false, params.urlLink);\n        }\n      }\n    } else {\n      throw new Error('Range out of the editor');\n    }\n  }\n\n  /**\n   * insert color either font or background\n   *\n   * @param color color to be inserted\n   * @param where where the color has to be inserted either text/background\n   */\n  insertColor(color: string, where: string): void {\n    if (this.savedSelection) {\n      const restored = Utils.restoreSelection(this.savedSelection);\n      if (restored && this.checkSelection()) {\n        if (where === 'textColor') {\n          document.execCommand('foreColor', false, color);\n        } else {\n          document.execCommand('hiliteColor', false, color);\n        }\n      }\n    } else {\n      throw new Error('Range out of the editor');\n    }\n  }\n\n  /**\n   * set font size for text\n   *\n   * @param fontSize font-size to be set\n   */\n  setFontSize(fontSize: string): void {\n    if (this.savedSelection && this.checkSelection()) {\n      const deletedValue = this.deleteAndGetElement();\n\n      if (deletedValue) {\n        const restored = Utils.restoreSelection(this.savedSelection);\n\n        if (restored) {\n          if (this.isNumeric(fontSize)) {\n            const fontPx = '<span style=\"font-size: ' + fontSize + 'px;\">' + deletedValue + '</span>';\n            this.insertHtml(fontPx);\n          } else {\n            const fontPx = '<span style=\"font-size: ' + fontSize + ';\">' + deletedValue + '</span>';\n            this.insertHtml(fontPx);\n          }\n        }\n      }\n    } else {\n      throw new Error('Range out of the editor');\n    }\n  }\n\n  /**\n   * set font name/family for text\n   *\n   * @param fontName font-family to be set\n   */\n  setFontName(fontName: string): void {\n    if (this.savedSelection && this.checkSelection()) {\n      const deletedValue = this.deleteAndGetElement();\n\n      if (deletedValue) {\n        const restored = Utils.restoreSelection(this.savedSelection);\n\n        if (restored) {\n          if (this.isNumeric(fontName)) {\n            const fontFamily = '<span style=\"font-family: ' + fontName + 'px;\">' + deletedValue + '</span>';\n            this.insertHtml(fontFamily);\n          } else {\n            const fontFamily = '<span style=\"font-family: ' + fontName + ';\">' + deletedValue + '</span>';\n            this.insertHtml(fontFamily);\n          }\n        }\n      }\n    } else {\n      throw new Error('Range out of the editor');\n    }\n  }\n\n  /** insert HTML */\n  private insertHtml(html: string): void {\n    const isHTMLInserted = document.execCommand('insertHTML', false, html);\n\n    if (!isHTMLInserted) {\n      throw new Error('Unable to perform the operation');\n    }\n  }\n\n  /**\n   * check whether the value is a number or string\n   * if number return true\n   * else return false\n   */\n  private isNumeric(value: any): boolean {\n    return /^-{0,1}\\d+$/.test(value);\n  }\n\n  /** delete the text at selected range and return the value */\n  private deleteAndGetElement(): any {\n    let slectedText;\n\n    if (this.savedSelection) {\n      slectedText = this.savedSelection.toString();\n      this.savedSelection.deleteContents();\n      return slectedText;\n    }\n\n    return false;\n  }\n\n  /** check any slection is made or not */\n  private checkSelection(): any {\n    const slectedText = this.savedSelection.toString();\n\n    if (slectedText.length === 0) {\n      throw new Error('No Selection Made');\n    }\n\n    return true;\n  }\n\n  /**\n   * check tag is supported by browser or not\n   *\n   * @param tag HTML tag\n   */\n  private checkTagSupportInBrowser(tag: string): boolean {\n    return !(document.createElement(tag) instanceof HTMLUnknownElement);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n\n/** time in which the message has to be cleared */\nconst DURATION = 7000;\n\n@Injectable()\nexport class MessageService {\n  /** variable to hold the user message */\n  private message: Subject<string> = new Subject();\n\n  constructor() { }\n\n  /** returns the message sent by the editor */\n  getMessage(): Observable<string> {\n    return this.message.asObservable();\n  }\n\n  /**\n   * sends message to the editor\n   *\n   * @param message message to be sent\n   */\n  sendMessage(message: string): void {\n    this.message.next(message);\n    this.clearMessageIn(DURATION);\n  }\n\n  /**\n   * a short interval to clear message\n   *\n   * @param milliseconds time in seconds in which the message has to be cleared\n   */\n  private clearMessageIn(milliseconds: number): void {\n    setTimeout(() => {\n      this.message.next(undefined);\n    }, milliseconds);\n  }\n}\n","/**\n * toolbar default configuration\n */\nexport const ngxEditorConfig = {\n  editable: true,\n  spellcheck: true,\n  height: 'auto',\n  minHeight: '0',\n  width: 'auto',\n  minWidth: '0',\n  translate: 'yes',\n  enableToolbar: true,\n  showToolbar: true,\n  placeholder: 'Enter text here...',\n  imageEndPoint: '',\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strikeThrough', 'superscript', 'subscript'],\n    ['fontName', 'fontSize', 'color'],\n    ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull', 'indent', 'outdent'],\n    ['cut', 'copy', 'delete', 'removeFormat', 'undo', 'redo'],\n    ['paragraph', 'blockquote', 'removeBlockquote', 'horizontalLine', 'orderedList', 'unorderedList'],\n    ['link', 'unlink', 'image', 'video']\n  ]\n};\n","import {\n  Component, OnInit, Input, Output, ViewChild,\n  EventEmitter, Renderer2, forwardRef\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { CommandExecutorService } from './common/services/command-executor.service';\nimport { MessageService } from './common/services/message.service';\n\nimport { ngxEditorConfig } from './common/ngx-editor.defaults';\nimport * as Utils from './common/utils/ngx-editor.utils';\n\n@Component({\n  selector: 'app-ngx-editor',\n  templateUrl: './ngx-editor.component.html',\n  styleUrls: ['./ngx-editor.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxEditorComponent),\n    multi: true\n  }]\n})\n\nexport class NgxEditorComponent implements OnInit, ControlValueAccessor {\n  /** Specifies weather the textarea to be editable or not */\n  @Input() editable: boolean;\n  /** The spellcheck property specifies whether the element is to have its spelling and grammar checked or not. */\n  @Input() spellcheck: boolean;\n  /** Placeholder for the textArea */\n  @Input() placeholder: string;\n  /**\n   * The translate property specifies whether the content of an element should be translated or not.\n   *\n   * Check https://www.w3schools.com/tags/att_global_translate.asp for more information and browser support\n   */\n  @Input() translate: string;\n  /** Sets height of the editor */\n  @Input() height: string;\n  /** Sets minimum height for the editor */\n  @Input() minHeight: string;\n  /** Sets Width of the editor */\n  @Input() width: string;\n  /** Sets minimum width of the editor */\n  @Input() minWidth: string;\n  /**\n   * Toolbar accepts an array which specifies the options to be enabled for the toolbar\n   *\n   * Check ngxEditorConfig for toolbar configuration\n   *\n   * Passing an empty array will enable all toolbar\n   */\n  @Input() toolbar: Object;\n  /**\n   * The editor can be resized vertically.\n   *\n   * `basic` resizer enables the html5 reszier. Check here https://www.w3schools.com/cssref/css3_pr_resize.asp\n   *\n   * `stack` resizer enable a resizer that looks like as if in https://stackoverflow.com\n   */\n  @Input() resizer = 'stack';\n  /**\n   * The config property is a JSON object\n   *\n   * All avaibale inputs inputs can be provided in the configuration as JSON\n   * inputs provided directly are considered as top priority\n   */\n  @Input() config = ngxEditorConfig;\n  /** Weather to show or hide toolbar */\n  @Input() showToolbar: boolean;\n  /** Weather to enable or disable the toolbar */\n  @Input() enableToolbar: boolean;\n  /** Endpoint for which the image to be uploaded */\n  @Input() imageEndPoint: string;\n\n  /** emits `blur` event when focused out from the textarea */\n  @Output() blur: EventEmitter<string> = new EventEmitter<string>();\n  /** emits `focus` event when focused in to the textarea */\n  @Output() focus: EventEmitter<string> = new EventEmitter<string>();\n\n  @ViewChild('ngxTextArea') textArea: any;\n  @ViewChild('ngxWrapper') ngxWrapper: any;\n\n  Utils: any = Utils;\n\n  private onChange: (value: string) => void;\n  private onTouched: () => void;\n\n  /**\n   * @param _messageService service to send message to the editor message component\n   * @param _commandExecutor executes command from the toolbar\n   * @param _renderer access and manipulate the dom element\n   */\n  constructor(\n    private _messageService: MessageService,\n    private _commandExecutor: CommandExecutorService,\n    private _renderer: Renderer2) { }\n\n  /**\n   * events\n   */\n  onTextAreaFocus(): void {\n    this.focus.emit('focus');\n  }\n\n  /** focus the text area when the editor is focussed */\n  onEditorFocus() {\n    this.textArea.nativeElement.focus();\n  }\n\n  /**\n   * Executed from the contenteditable section while the input property changes\n   * @param html html string from contenteditable\n   */\n  onContentChange(innerHTML: string): void {\n    if (typeof this.onChange === 'function') {\n      this.onChange(innerHTML);\n      this.togglePlaceholder(innerHTML);\n    }\n  }\n\n  onTextAreaBlur(): void {\n    /** save selection if focussed out */\n    this._commandExecutor.savedSelection = Utils.saveSelection();\n\n    if (typeof this.onTouched === 'function') {\n      this.onTouched();\n    }\n    this.blur.emit('blur');\n  }\n\n  /**\n   * resizing text area\n   *\n   * @param offsetY vertical height of the eidtable portion of the editor\n   */\n  resizeTextArea(offsetY: number): void {\n    let newHeight = parseInt(this.height, 10);\n    newHeight += offsetY;\n    this.height = newHeight + 'px';\n    this.textArea.nativeElement.style.height = this.height;\n  }\n\n  /**\n   * editor actions, i.e., executes command from toolbar\n   *\n   * @param commandName name of the command to be executed\n   */\n  executeCommand(commandName: string): void {\n    try {\n      this._commandExecutor.execute(commandName);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n  }\n\n  /**\n   * Write a new value to the element.\n   *\n   * @param value value to be executed when there is a change in contenteditable\n   */\n  writeValue(value: any): void {\n    this.togglePlaceholder(value);\n\n    if (value === null || value === undefined || value === '' || value === '<br>') {\n      value = null;\n    }\n\n    this.refreshView(value);\n  }\n\n  /**\n   * Set the function to be called\n   * when the control receives a change event.\n   *\n   * @param fn a function\n   */\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Set the function to be called\n   * when the control receives a touch event.\n   *\n   * @param fn a function\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * refresh view/HTML of the editor\n   *\n   * @param value html string from the editor\n   */\n  refreshView(value: string): void {\n    const normalizedValue = value === null ? '' : value;\n    this._renderer.setProperty(this.textArea.nativeElement, 'innerHTML', normalizedValue);\n  }\n\n  /**\n   * toggles placeholder based on input string\n   *\n   * @param value A HTML string from the editor\n   */\n  togglePlaceholder(value: any): void {\n    if (!value || value === '<br>' || value === '') {\n      this._renderer.addClass(this.ngxWrapper.nativeElement, 'show-placeholder');\n    } else {\n      this._renderer.removeClass(this.ngxWrapper.nativeElement, 'show-placeholder');\n    }\n  }\n\n  /**\n   * returns a json containing input params\n   */\n  getCollectiveParams(): any {\n    return {\n      editable: this.editable,\n      spellcheck: this.spellcheck,\n      placeholder: this.placeholder,\n      translate: this.translate,\n      height: this.height,\n      minHeight: this.minHeight,\n      width: this.width,\n      minWidth: this.minWidth,\n      enableToolbar: this.enableToolbar,\n      showToolbar: this.showToolbar,\n      imageEndPoint: this.imageEndPoint,\n      toolbar: this.toolbar\n    };\n  }\n\n  ngOnInit() {\n    /**\n     * set configuartion\n     */\n    this.config = this.Utils.getEditorConfiguration(this.config, ngxEditorConfig, this.getCollectiveParams());\n\n    this.height = this.height || this.textArea.nativeElement.offsetHeight;\n\n    this.executeCommand('enableObjectResizing');\n  }\n}\n","import { Component, HostListener } from '@angular/core';\nimport { NgxEditorComponent } from '../ngx-editor.component';\n\n@Component({\n  selector: 'app-ngx-grippie',\n  templateUrl: './ngx-grippie.component.html',\n  styleUrls: ['./ngx-grippie.component.scss']\n})\n\nexport class NgxGrippieComponent {\n  /** height of the editor */\n  height: number;\n  /** previous value befor resizing the editor */\n  oldY = 0;\n  /** set to true on mousedown event */\n  grabber = false;\n\n  /**\n   * Constructor\n   *\n   * @param _editorComponent Editor component\n   */\n  constructor(private _editorComponent: NgxEditorComponent) { }\n\n  /**\n   *\n   * @param event Mouseevent\n   *\n   * Update the height of the editor when the grabber is dragged\n   */\n  @HostListener('document:mousemove', ['$event']) onMouseMove(event: MouseEvent) {\n    if (!this.grabber) {\n      return;\n    }\n\n    this._editorComponent.resizeTextArea(event.clientY - this.oldY);\n    this.oldY = event.clientY;\n  }\n\n  /**\n   *\n   * @param event Mouseevent\n   *\n   * set the grabber to false on mouse up action\n   */\n  @HostListener('document:mouseup', ['$event']) onMouseUp(event: MouseEvent) {\n    this.grabber = false;\n  }\n\n  @HostListener('mousedown', ['$event']) onResize(event: MouseEvent, resizer?: Function) {\n    this.grabber = true;\n    this.oldY = event.clientY;\n    event.preventDefault();\n  }\n\n}\n","import { Component } from '@angular/core';\n\nimport { MessageService } from '../common/services/message.service';\n\n@Component({\n  selector: 'app-ngx-editor-message',\n  templateUrl: './ngx-editor-message.component.html',\n  styleUrls: ['./ngx-editor-message.component.scss']\n})\n\nexport class NgxEditorMessageComponent {\n  /** property that holds the message to be displayed on the editor */\n  ngxMessage = undefined;\n\n  /**\n   * @param _messageService service to send message to the editor\n   */\n  constructor(private _messageService: MessageService) {\n    this._messageService.getMessage().subscribe((message: string) => this.ngxMessage = message);\n  }\n\n  /**\n   * clears editor message\n   */\n  clearMessage(): void {\n    this.ngxMessage = undefined;\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpResponse } from '@angular/common/http';\nimport { PopoverConfig } from 'ngx-bootstrap';\nimport { CommandExecutorService } from '../common/services/command-executor.service';\nimport { MessageService } from '../common/services/message.service';\nimport * as Utils from '../common/utils/ngx-editor.utils';\n\n@Component({\n  selector: 'app-ngx-editor-toolbar',\n  templateUrl: './ngx-editor-toolbar.component.html',\n  styleUrls: ['./ngx-editor-toolbar.component.scss'],\n  providers: [PopoverConfig]\n})\n\nexport class NgxEditorToolbarComponent implements OnInit {\n  /** holds values of the insert link form */\n  urlForm: FormGroup;\n  /** holds values of the insert image form */\n  imageForm: FormGroup;\n  /** holds values of the insert video form */\n  videoForm: FormGroup;\n  /** set to false when image is being uploaded */\n  uploadComplete = true;\n  /** upload percentage */\n  updloadPercentage = 0;\n  /** set to true when the image is being uploaded */\n  isUploading = false;\n  /** which tab to active for color insetion */\n  selectedColorTab = 'textColor';\n  /** font family name */\n  fontName = '';\n  /** font size */\n  fontSize = '';\n  /** hex color code */\n  hexColor = '';\n  /** show/hide image uploader */\n  isImageUploader = false;\n\n  /**\n   * Editor configuration\n   */\n  @Input() config: any;\n  @ViewChild('urlPopover') urlPopover;\n  @ViewChild('imagePopover') imagePopover;\n  @ViewChild('videoPopover') videoPopover;\n  @ViewChild('fontSizePopover') fontSizePopover;\n  @ViewChild('colorPopover') colorPopover;\n  /**\n   * Emits an event when a toolbar button is clicked\n   */\n  @Output() execute: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private _popOverConfig: PopoverConfig,\n    private _formBuilder: FormBuilder,\n    private _messageService: MessageService,\n    private _commandExecutorService: CommandExecutorService) {\n    this._popOverConfig.outsideClick = true;\n    this._popOverConfig.placement = 'bottom';\n    this._popOverConfig.container = 'body';\n  }\n\n  /**\n   * enable or diable toolbar based on configuration\n   *\n   * @param value name of the toolbar buttons\n   */\n  canEnableToolbarOptions(value): boolean {\n    return Utils.canEnableToolbarOptions(value, this.config['toolbar']);\n  }\n\n  /**\n   * triggers command from the toolbar to be executed and emits an event\n   *\n   * @param command name of the command to be executed\n   */\n  triggerCommand(command: string): void {\n    this.execute.emit(command);\n  }\n\n  /**\n   * create URL insert form\n   */\n  buildUrlForm(): void {\n    this.urlForm = this._formBuilder.group({\n      urlLink: ['', [Validators.required]],\n      urlText: ['', [Validators.required]],\n      urlNewTab: [true]\n    });\n  }\n\n  /**\n   * inserts link in the editor\n   */\n  insertLink(): void {\n    try {\n      this._commandExecutorService.createLink(this.urlForm.value);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n\n    /** reset form to default */\n    this.buildUrlForm();\n    /** close inset URL pop up */\n    this.urlPopover.hide();\n  }\n\n  /**\n   * create insert image form\n   */\n  buildImageForm(): void {\n    this.imageForm = this._formBuilder.group({\n      imageUrl: ['', [Validators.required]]\n    });\n  }\n\n  /**\n   * create insert image form\n   */\n  buildVideoForm(): void {\n    this.videoForm = this._formBuilder.group({\n      videoUrl: ['', [Validators.required]],\n      height: [''],\n      width: ['']\n    });\n  }\n\n  /**\n   * Executed when file is selected\n   *\n   * @param e onChange event\n   */\n  onFileChange(e): void {\n    this.uploadComplete = false;\n    this.isUploading = true;\n\n    if (e.target.files.length > 0) {\n      const file = e.target.files[0];\n\n      try {\n        this._commandExecutorService.uploadImage(file, this.config.imageEndPoint).subscribe(event => {\n\n          if (event.type) {\n            this.updloadPercentage = Math.round(100 * event.loaded / event.total);\n          }\n\n          if (event instanceof HttpResponse) {\n            try {\n              this._commandExecutorService.insertImage(event.body.url);\n            } catch (error) {\n              this._messageService.sendMessage(error.message);\n            }\n            this.uploadComplete = true;\n            this.isUploading = false;\n          }\n        });\n      } catch (error) {\n        this._messageService.sendMessage(error.message);\n        this.uploadComplete = true;\n        this.isUploading = false;\n      }\n    }\n  }\n\n  /** insert image in the editor */\n  insertImage(): void {\n    try {\n      this._commandExecutorService.insertImage(this.imageForm.value.imageUrl);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n\n    /** reset form to default */\n    this.buildImageForm();\n    /** close inset URL pop up */\n    this.imagePopover.hide();\n  }\n\n  /** insert image in the editor */\n  insertVideo(): void {\n    try {\n      this._commandExecutorService.insertVideo(this.videoForm.value);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n\n    /** reset form to default */\n    this.buildVideoForm();\n    /** close inset URL pop up */\n    this.videoPopover.hide();\n  }\n\n  /** inser text/background color */\n  insertColor(color: string, where: string): void {\n    try {\n      this._commandExecutorService.insertColor(color, where);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n\n    this.colorPopover.hide();\n  }\n\n  /** set font size */\n  setFontSize(fontSize: string): void {\n    try {\n      this._commandExecutorService.setFontSize(fontSize);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n\n    this.fontSizePopover.hide();\n  }\n\n  /** set font Name/family */\n  setFontName(fontName: string): void {\n    try {\n      this._commandExecutorService.setFontName(fontName);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n\n    this.fontSizePopover.hide();\n  }\n\n  ngOnInit() {\n    this.buildUrlForm();\n    this.buildImageForm();\n    this.buildVideoForm();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopoverModule } from 'ngx-bootstrap';\nimport { NgxEditorComponent } from './ngx-editor.component';\nimport { NgxGrippieComponent } from './ngx-grippie/ngx-grippie.component';\nimport { NgxEditorMessageComponent } from './ngx-editor-message/ngx-editor-message.component';\nimport { NgxEditorToolbarComponent } from './ngx-editor-toolbar/ngx-editor-toolbar.component';\nimport { MessageService } from './common/services/message.service';\nimport { CommandExecutorService } from './common/services/command-executor.service';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, PopoverModule.forRoot()],\n  declarations: [NgxEditorComponent, NgxGrippieComponent, NgxEditorMessageComponent, NgxEditorToolbarComponent],\n  exports: [NgxEditorComponent],\n  providers: [CommandExecutorService, MessageService]\n})\n\nexport class NgxEditorModule { }\n","import { AbstractControl } from '@angular/forms';\n\ninterface IMaxLengthValidatorOptions {\n  excludeLineBreaks?: boolean;\n  concatWhiteSpaces?: boolean;\n  excludeWhiteSpaces?: boolean;\n}\n\nexport function MaxLengthValidator(maxlength: number, options?: IMaxLengthValidatorOptions) {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const parsedDocument = new DOMParser().parseFromString(control.value, 'text/html');\n    let innerText = parsedDocument.body.innerText || '';\n\n    // replace all linebreaks\n    if (options.excludeLineBreaks) {\n      innerText = innerText.replace(/(\\r\\n\\t|\\n|\\r\\t)/gm, '');\n    }\n\n    // concat multiple whitespaces into a single whitespace\n    if (options.concatWhiteSpaces) {\n      innerText = innerText.replace(/(\\s\\s+)/gm, ' ');\n    }\n\n    // remove all whitespaces\n    if (options.excludeWhiteSpaces) {\n      innerText = innerText.replace(/(\\s)/gm, '');\n    }\n\n    if (innerText.length > maxlength) {\n      return {\n        ngxEditor: {\n          allowedLength: maxlength,\n          textLength: innerText.length\n        }\n      };\n    }\n    return null;\n  };\n}\n"],"names":["Utils.restoreSelection","HttpRequest","Injectable","HttpClient","Subject","EventEmitter","Utils.saveSelection","Component","NG_VALUE_ACCESSOR","forwardRef","Renderer2","Input","Output","ViewChild","HostListener","Utils.canEnableToolbarOptions","Validators","HttpResponse","PopoverConfig","FormBuilder","NgModule","CommonModule","FormsModule","ReactiveFormsModule","PopoverModule"],"mappings":"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"}
